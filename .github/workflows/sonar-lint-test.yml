name: SonarCloud Analysis with Lint and Test

on:
  push:
    branches: [ main, kmp_with_analyze_tools ]
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      gradle-cache-key: ${{ steps.gradle-cache.outputs.cache-key }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Generate Gradle cache key
        id: gradle-cache
        run: echo "cache-key=${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}" >> $GITHUB_OUTPUT

  lint:
    name: Run Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Restore Gradle cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ needs.setup.outputs.gradle-cache-key }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Run Ktlint
        run: ./gradlew ktlintCheck

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Restore Gradle cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ needs.setup.outputs.gradle-cache-key }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Run Unit Tests
        run: ./gradlew allTests

  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [setup, lint, test]  # Wait for test to complete to ensure reports are available
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Restore Gradle cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ needs.setup.outputs.gradle-cache-key }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run SonarCloud Analysis
        run: |
          ./gradlew sonar \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}