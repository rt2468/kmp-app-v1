name: Lint, Test, SQ-2

on:
  push:
    branches: [ main, master, kmp_with_analyze_tools ]
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

defaults:
  run:
    shell: bash

env:
  JAVA_VERSION: 17
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true

jobs:
  lint:
    name: Run KtLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Run KtLint
        - name: Grant execute permission for gradlew
          run: chmod +x ./gradlew
        run: ./gradlew ktlintCheck

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Run Unit Tests
        run: ./gradlew allTests

      - name: Upload Test & Coverage Reports
        uses: actions/upload-artifact@v4
        if: always()  # Upload even if tests fail
        with:
          name: test-reports
          if-no-files-found: warn
          retention-days: 30
          path: |
            **/build/test-results/**
            **/build/reports/**
            **/build/jacoco/**

  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: always() && (needs.lint.result == 'success' || needs.test.result == 'success')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin

      - name: Download Test & Coverage Reports
        uses: actions/download-artifact@v4
        with:
          name: test-reports
          path: .

      - name: Run SonarCloud Analysis
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          gradle-home-cache-cleanup: true
          arguments: |
            sonar 
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} 
            -Dsonar.organization=${{ secrets.SONAR_ORG }} 
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
