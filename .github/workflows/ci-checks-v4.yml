name: Lint, Test, SQ-2

on:
  push:
    branches: [main, master, kmp_with_analyze_tools]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  contents: read
  pull-requests: write

env:
  JAVA_VERSION: '17'

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      gradle-cache-key: ${{ steps.gradle-cache-key.outputs.key }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: gradle

      - name: Generate Gradle cache key
        id: gradle-cache-key
        run: |
          key=$(sha256sum gradle/wrapper/gradle-wrapper.properties | cut -d' ' -f1)
          echo "key=$key" >> $GITHUB_OUTPUT

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ steps.gradle-cache-key.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  lint:
    name: Run KtLint
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: gradle

      - name: Run KtLint
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ktlintCheck
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' }}

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: gradle

      - name: Run Tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test --continue
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' }}

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/test-results/**
            **/build/reports/tests/**
          retention-days: 14

      - name: Upload Coverage Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            **/build/jacoco/**/*.exec
            **/build/reports/jacoco/**
          retention-days: 14

      - name: Publish Test Summary
        if: always()
        run: |
          echo "### âœ… Unit Test Results" >> $GITHUB_STEP_SUMMARY
          echo "[View full test reports](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY

  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: success() && (github.event_name == 'pull_request' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: gradle

      - name: Download Test Reports
        uses: actions/download-artifact@v4
        with:
          name: test-reports
          path: build/test-results
        continue-on-error: true

      - name: Download Coverage Reports
        uses: actions/download-artifact@v4
        with:
          name: coverage-reports
          path: build/jacoco
        continue-on-error: true

      - name: Run SonarCloud Analysis
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          arguments: >
            sonar
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            $( [ -d build/test-results ] && echo "-Dsonar.junit.reportPaths=build/test-results/test" )
            $( [ -d build/jacoco ] && echo "-Dsonar.jacoco.reportPaths=build/jacoco/test.exec" )
