name: Lint, Test, SQ

on:
  workflow_dispatch:

# Optional but recommended: avoid duplicate concurrent runs on the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Least-privilege defaults; Sonar PR decoration typically uses the SonarCloud app
permissions:
  contents: read
  pull-requests: write

defaults:
  run:
    shell: bash

env:
  JAVA_VERSION: 17

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Prime Gradle caches once so later jobs restore quickly
      - name: Cache Gradle (caches + wrapper)
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

  lint:
    name: Run KtLint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin

      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - run: chmod +x ./gradlew

      - name: Run KtLint
        run: ./gradlew ktlintCheck --no-daemon

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin

      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - run: chmod +x ./gradlew

      - name: Run Unit Tests
        run: ./gradlew allTests --no-daemon

      # Make reports available to the sonar job (multi-module friendly)
      - name: Upload Test & Coverage Reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          if-no-files-found: warn
          path: |
            **/build/test-results/**
            **/build/reports/**
            **/build/jacoco/**

  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # required for proper blame/PR analysis

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin

      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - run: chmod +x ./gradlew

      - name: Download Test & Coverage Reports
        uses: actions/download-artifact@v4
        with:
          name: test-reports
          path: .

      # Run Sonar analysis using Gradle plugin (recommended approach)
      - name: Run SonarCloud Analysis
        run: |
          ./gradlew sonar --no-daemon \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
