name: SonarCloud Analysis with Lint and Test

on:
  push:
    branches: [ main, kmp_with_analyze_tools ]
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  JAVA_VERSION: 17
  GRADLE_CACHE_KEY: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Cache Gradle (Build + Wrapper)
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ env.GRADLE_CACHE_KEY }}
          restore-keys: |
            ${{ runner.os }}-gradle

  lint:
    name: Run KtLint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ env.GRADLE_CACHE_KEY }}
      - run: chmod +x ./gradlew
      - name: Run KtLint
        run: ./gradlew ktlintCheck

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ env.GRADLE_CACHE_KEY }}
      - run: chmod +x ./gradlew
      - name: Run Unit Tests
        run: ./gradlew allTests
      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: build/reports

  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ env.GRADLE_CACHE_KEY }}
      - run: chmod +x ./gradlew
      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
      - name: Download Test Reports
        uses: actions/download-artifact@v4
        with:
          name: test-reports
          path: build/reports
      - name: Run SonarCloud Analysis
        run: |
          ./gradlew sonar \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Optional: Wait for Quality Gate and fail if it fails
      - name: SonarCloud Quality Gate
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
          organization: ${{ secrets.SONAR_ORG }}
          token: ${{ secrets.SONAR_TOKEN }}
