name: Lint, Test, SQ-4

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

defaults:
  run:
    shell: bash

env:
  JAVA_VERSION: '17'
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true -Dorg.gradle.caching=true
  GRADLE_BUILD_CACHE: true
  GRADLE_BUILD_CACHE_DEBUG: false

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.gradle-cache.outputs.cache-key }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: gradle

      - name: Generate Gradle cache key
        id: gradle-cache
        run: echo "cache-key=$(./gradlew --version | sha256sum | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ steps.gradle-cache.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  lint:
    name: Run KtLint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: gradle

      - name: Restore Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run KtLint with Gradle caching
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ktlintCheck
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' && github.ref != 'refs/heads/kmp_with_analyze_tools' }}

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: gradle

      - name: Restore Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test --continue
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' && github.ref != 'refs/heads/kmp_with_analyze_tools' }}

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/test-results/**
            **/build/reports/tests/**
          retention-days: 14

      - name: Upload Coverage Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            **/build/jacoco/*.exec
            **/build/reports/jacoco/**
          retention-days: 14

  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: always() && (needs.lint.result == 'success' || needs.test.result == 'success')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: gradle

      - name: Download Test Reports (if available)
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: test-reports
          path: build/test-results

      - name: Download Coverage Reports (if available)
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: coverage-reports
          path: build/jacoco

      - name: Check if test results exist
        id: check-test-results
        run: |
          if [ -d "build/test-results" ] && [ "$(ls -A build/test-results)" ]; then
            echo "test-results-exist=true" >> $GITHUB_OUTPUT
          else
            echo "test-results-exist=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if coverage reports exist
        id: check-coverage-reports
        run: |
          if [ -d "build/jacoco" ] && [ "$(ls -A build/jacoco)" ]; then
            echo "coverage-reports-exist=true" >> $GITHUB_OUTPUT
          else
            echo "coverage-reports-exist=false" >> $GITHUB_OUTPUT
          fi

      - name: Run SonarCloud Analysis
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          arguments: |
            sonar 
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            ${{ steps.check-test-results.outputs.test-results-exist == 'true' && '-Dsonar.junit.reportPaths=build/test-results/test' || '' }}
            ${{ steps.check-coverage-reports.outputs.coverage-reports-exist == 'true' && '-Dsonar.jacoco.reportPaths=build/jacoco/test.exec' || '' }}
